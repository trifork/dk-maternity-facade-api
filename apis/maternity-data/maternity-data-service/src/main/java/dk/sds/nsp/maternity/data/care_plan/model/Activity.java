/*
 * Care Plan Domain Model
 * Care Plan Domain Model for Maternity Facade API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dk.sds.nsp.maternity.data.care_plan.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;

/**
 * Activity
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-10-26T12:45:02.145373+01:00[Europe/Copenhagen]")
public class Activity extends EditableActivity {

  @JsonProperty("id")
  private String id = null;



  public Activity id(String id) {
    this.id = id;
    return this;
  }

  

  /**
  * Get id
  * @return id
  **/
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Activity activity = (Activity) o;
    return Objects.equals(this.id, activity.id) &&
        super.equals(o);
  }

  @Override
  public Activity practitioner(Practitioner practitioner) {
    super.practitioner(practitioner); 
    return this;
  }

  @Override
  public Activity location(Location location) {
    super.location(location); 
    return this;
  }

  @Override
  public Activity gestationWeek(String gestationWeek) {
    super.gestationWeek(gestationWeek); 
    return this;
  }

  @Override
  public Activity plannedTime(Period plannedTime) {
    super.plannedTime(plannedTime); 
    return this;
  }

  @Override
  public Activity status(StatusEnum status) {
    super.status(status); 
    return this;
  }

  @Override
  public Activity title(String title) {
    super.title(title); 
    return this;
  }

  @Override
  public Activity description(String description) {
    super.description(description); 
 return this;
  }

  @Override
  public Activity reference(String reference) {
    super.reference(reference); 
 return this;
  }

  @Override
  public Activity goal(Goal goal) {
    super.goal(goal); 
 return this;
  }

  @Override
  public Activity code(Code code) {
    super.code(code); 
 return this;
  }

  @Override
  public Activity kind(String kind) {
    super.kind(kind); 
 return this;
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Activity {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
