/*
 * Care Plan Domain Model
 * Care Plan Domain Model for Maternity Facade API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dk.sds.nsp.maternity.data.care_plan.model;

import java.util.Date;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EditableActivityPlannedTime
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-10-26T12:45:02.145373+01:00[Europe/Copenhagen]")
public class Period {

  @JsonProperty("from")

  private Date from = null;

  @JsonProperty("to")

  private Date to = null;
  public Period from(Date from) {
    this.from = from;
    return this;
  }

  

  /**
  * Get from
  * @return from
  **/
  public Date getFrom() {
    return from;
  }
  public void setFrom(Date from) {
    this.from = from;
  }
  public Period to(Date to) {
    this.to = to;
    return this;
  }

  

  /**
  * Get to
  * @return to
  **/
  public Date getTo() {
    return to;
  }
  public void setTo(Date to) {
    this.to = to;
  }
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Period period = (Period) o;
    return Objects.equals(this.from, period.from) &&
        Objects.equals(this.to, period.to);
  }

  @Override
  public int hashCode() {
    return Objects.hash(from, to);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EditableActivityPlannedTime {\n");
    
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
