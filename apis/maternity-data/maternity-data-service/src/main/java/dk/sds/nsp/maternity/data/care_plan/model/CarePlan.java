/*
 * Care Plan Domain Model
 * Care Plan Domain Model for Maternity Facade API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dk.sds.nsp.maternity.data.care_plan.model;

import com.fasterxml.jackson.annotation.JsonProperty;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * CarePlan
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-10-26T12:45:02.145373+01:00[Europe/Copenhagen]")
public class CarePlan extends EditableCarePlan {

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("version")
  private BigDecimal version = null;

  @JsonProperty("activities")
  private List<Activity> activities = null;

  public CarePlan id(String id) {
    this.id = id;
    return this;
  }

  /**
  * Get id
  * @return id
  **/
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  public CarePlan version(BigDecimal version) {
    this.version = version;
    return this;
  }
  /**
   * Get version
   * @return version
   **/
  public BigDecimal getVersion() {
    return version;
  }
  public void setVersion(BigDecimal version) {
    this.version = version;
  }

  public CarePlan addActivitiesItem(Activity activitiesItem) {
    if (this.activities == null) {
      this.activities = new ArrayList<Activity>();
    }
    this.activities.add(activitiesItem);
    return this;
  }

  /**
   * Get activities
   * @return activities
   **/
  public CarePlan withActivities(List<Activity> activities) {
    this.activities = activities;
    return this;
  }
  @JsonProperty("activities")
  public List<Activity> getAllActivities() {
    return activities;
  }
  @JsonProperty("activities")
  public void setAllActivities(List<Activity> activities) {
    this.activities = activities;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CarePlan carePlan = (CarePlan) o;
    return Objects.equals(this.id, carePlan.id) &&
           Objects.equals(this.version, carePlan.version) &&

            super.equals(o);
  }

  @Override
  public CarePlan patient(String patient) {
    super.patient(patient);
    return this;
  }

  @Override
  public CarePlan title(String title) {
    super.title(title);
    return this;
  }

  @Override
  public CarePlan description(String description) {
    super.description(description);
    return this;
  }

  @Override
  public CarePlan goal(Goal goal) {
    super.goal(goal);
    return this;
  }

  @Override
  public CarePlan responsibleOrganization(ResponsibleOrganization responsibleOrganization) {
     super.responsibleOrganization(responsibleOrganization);
     return this;
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, version, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CarePlan {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
