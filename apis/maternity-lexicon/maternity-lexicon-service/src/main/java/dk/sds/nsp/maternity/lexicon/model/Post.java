/*
 * DK Maternity Lexicon Api
 * This is the specification of the DK Maternity Lexicon API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dk.sds.nsp.maternity.lexicon.model;

import java.util.Date;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;

/**
 * Represents a guide for the patient - analogous to a wordpress [post](https://developer.wordpress.org/rest-api/reference/posts/#schema)
 */
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-11-03T16:15:42.700046+01:00[Europe/Copenhagen]")
public class Post {

  @JsonProperty("publicationDate")
  private Date publicationDate = null;

  @JsonProperty("lastUpdateDate")
  private Date lastUpdateDate = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("content")
  private List<PostContent> content = null;

  @JsonProperty("excerpt")
  private String excerpt = null;

  @JsonProperty("categories")
  private List<String> categories = null;

  @JsonProperty("tags")
  private List<String> tags = null;
  public Post publicationDate(Date publicationDate) {
    this.publicationDate = publicationDate;
    return this;
  }

  

  /**
  * Get publicationDate
  * @return publicationDate
  **/
  public Date getPublicationDate() {
    return publicationDate;
  }
  public void setPublicationDate(Date publicationDate) {
    this.publicationDate = publicationDate;
  }
  public Post lastUpdateDate(Date lastUpdateDate) {
    this.lastUpdateDate = lastUpdateDate;
    return this;
  }

  

  /**
  * Get lastUpdateDate
  * @return lastUpdateDate
  **/
  public Date getLastUpdateDate() {
    return lastUpdateDate;
  }
  public void setLastUpdateDate(Date lastUpdateDate) {
    this.lastUpdateDate = lastUpdateDate;
  }
  public Post id(String id) {
    this.id = id;
    return this;
  }

  

  /**
  * Get id
  * @return id
  **/
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }
  public Post title(String title) {
    this.title = title;
    return this;
  }

  

  /**
  * Get title
  * @return title
  **/
  public String getTitle() {
    return title;
  }
  public void setTitle(String title) {
    this.title = title;
  }
  public Post content(List<PostContent> content) {
    this.content = content;
    return this;
  }

  public Post addContentItem(PostContent contentItem) {
    if (this.content == null) {
      this.content = new ArrayList<PostContent>();
    }
    this.content.add(contentItem);
    return this;
  }

  /**
  * A list of sections, each with a title and some content
  * @return content
  **/
  public List<PostContent> getContent() {
    return content;
  }
  public void setContent(List<PostContent> content) {
    this.content = content;
  }
  public Post excerpt(String excerpt) {
    this.excerpt = excerpt;
    return this;
  }

  

  /**
  * Get excerpt
  * @return excerpt
  **/
  public String getExcerpt() {
    return excerpt;
  }
  public void setExcerpt(String excerpt) {
    this.excerpt = excerpt;
  }
  public Post categories(List<String> categories) {
    this.categories = categories;
    return this;
  }

  public Post addCategoriesItem(String categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<String>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

  /**
  * Get categories
  * @return categories
  **/
  public List<String> getCategories() {
    return categories;
  }
  public void setCategories(List<String> categories) {
    this.categories = categories;
  }
  public Post tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public Post addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
  * Get tags
  * @return tags
  **/
  public List<String> getTags() {
    return tags;
  }
  public void setTags(List<String> tags) {
    this.tags = tags;
  }
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Post post = (Post) o;
    return Objects.equals(this.publicationDate, post.publicationDate) &&
        Objects.equals(this.lastUpdateDate, post.lastUpdateDate) &&
        Objects.equals(this.id, post.id) &&
        Objects.equals(this.title, post.title) &&
        Objects.equals(this.content, post.content) &&
        Objects.equals(this.excerpt, post.excerpt) &&
        Objects.equals(this.categories, post.categories) &&
        Objects.equals(this.tags, post.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(publicationDate, lastUpdateDate, id, title, content, excerpt, categories, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Post {\n");
    
    sb.append("    publicationDate: ").append(toIndentedString(publicationDate)).append("\n");
    sb.append("    lastUpdateDate: ").append(toIndentedString(lastUpdateDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    excerpt: ").append(toIndentedString(excerpt)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
